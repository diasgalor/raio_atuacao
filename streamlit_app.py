import streamlit as st
import pandas as pd
import geopandas as gpd
from shapely.geometry import Point
from shapely.ops import unary_union
import folium
from folium.plugins import MarkerCluster
import math
from unidecode import unidecode
import xml.etree.ElementTree as ET
from streamlit_folium import st_folium

# Configura칞칚o da p치gina
st.set_page_config(page_title="Raio de Atua칞칚o dos Analistas", layout="wide")

# Upload de arquivos na sidebar
st.sidebar.header("Upload de Arquivos")
kml_file = st.sidebar.file_uploader("游늭 Upload KML", type=['kml'])
xlsx_file = st.sidebar.file_uploader("游늵 Upload Excel", type=['xlsx', 'xls'])

# CSS e fun칞칫es auxiliares permanecem iguais...

# T칤tulo e descri칞칚o
st.title("游늸 Raio de Atua칞칚o dos Analistas")
st.markdown("Selecione um gestor e especialista (ou 'Todos') para visualizar as unidades atendidas, dist칙ncias e o raio de atua칞칚o no mapa.")

# Verifica칞칚o se os arquivos foram carregados
if kml_file and xlsx_file:
    try:
        # Processamento dos arquivos (igual ao anterior)
        # ... [c칩digo de processamento do KML e Excel]
        
        # AP칍S processar os arquivos e criar a vari치vel 'resultados', ent칚o criamos a interface
        if 'resultados' in locals():  # Verifica se a vari치vel foi definida
            # Interface: sele칞칚o por gestor e especialista
            col1, col2 = st.columns([1, 1], gap="medium")
            with col1:
                st.markdown("### Sele칞칚o")
                gestores = sorted(resultados['GESTOR'].unique())
                gestor_selecionado = st.selectbox("Gestor", options=gestores, format_func=lambda x: x.title())
                especialistas_filtrados = resultados[resultados['GESTOR'] == gestor_selecionado]
                nomes_especialistas = ['Todos'] + sorted(especialistas_filtrados['ESPECIALISTA'].unique())
                especialista_selecionado = st.selectbox("Especialista", options=nomes_especialistas, format_func=lambda x: x.title())
            
            # Restante do c칩digo que usa 'resultados'...
            
        else:
            st.error("Erro ao processar os dados. Verifique os arquivos e tente novamente.")
            
    except Exception as e:
        st.error(f"Erro ao processar os arquivos: {str(e)}")
else:
    st.info("Por favor, fa칞a upload dos arquivos KML e Excel na barra lateral para continuar.")
